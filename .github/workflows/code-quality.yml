name: Code Quality
on:
  workflow_call:
jobs:
  python-formatting:
    runs-on: ubuntu-latest
    environment: Staging
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Set PYTHONPATH to the api directory
      run: echo "PYTHONPATH=${{ github.workspace }}/api" >> $GITHUB_ENV

    - name: Set environment variables
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> $GITHUB_ENV
        echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> $GITHUB_ENV
    - name: Check if secret is set
      run: |
        if [ -z "${{ secrets.SUPABASE_URL }}" ]; then
          echo "Secret is empty or not set."
        else
          echo "Secret is set."
        fi
    - name: Find all Python files excluding the .venv directory
      run: find . -type f -name "*.py" ! -path "./.venv/*" -print0 > python_files.tmp

    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Run black
      run: xargs -0 black < python_files.tmp

    - name: Run pytest
      run: xargs -0 pytest < python_files.tmp

    - name: Run flake8 (with adjustments to allow for black's formatting)
      run: xargs -0 flake8 < python_files.tmp --extend-ignore E203  --extend-ignore E722 --max-line-length 120
    - name: Run mypy
      run: |
        xargs -0 < python_files.tmp echo > newline_python_files.tmp
        mypy --namespace-packages --explicit-package-bases -p newline_python_files.tmp
    - name: Clean up
      run: rm -f python_files.tmp newline_python_files.tmp